1. Create mysql server on one docker’s container and name this container as “sqlserver”.
Set MYSQl Server password as “root” (for root user). Create a database called “egci313”

- docker run --name=sqlserver -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=egci313 -p 3306:3306 -d mysql
- docker inspect sqlserver
- docker exec -it sqlserver bash
- mysql -u root -p
- ALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY 'root';

2. Create phpmyadmin application on the docker’s container and name this container as myadmin.
Connect this phpmyadmin with MYSQL server in (1)

- docker run --name myadmin -d --link sqlserver:db -p 8081:80 phpmyadmin/phpmyadmin
// Create "students" table with 3 column (id, firstname, lastnname) and insert 2 records.
- docker exec -it myadmin sh
- mkdir egci313
- cd egci313
- apt-get update
-- apt-get -y install nano

// Create dbconnect.php
<?php
$servername = "db
$username = "root";
$password = "root";
$dbname = "egci313";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);
// Check connection
if (!$conn) {
die("Connection failed: " . mysqli_connect_error());
}
$sql = "SELECT * FROM students";
$result = mysqli_query($conn, $sql);

$str = "";
if (($count=mysqli_num_rows($result)) > 0) {

while($row = mysqli_fetch_assoc($result)) {

$str = $str.$row["firstname"].$row["lastname"];
}

} else {
echo "0 results";
}
mysqli_close($conn);

$url = 'http://www.atilal.com/egci313/photourl/photo.php?name='.$str;
echo $url;

?>
/*-------------------------------*/
username and password to access the image link
username: egci313
password: egci313student

--------------------------------------------------------
Azure Machine Learning
https://studio.azureml.net/

Simple ML Azure Tutorial
https://medium.com/data-science-journal/a-simple-hands-on-tutorial-of-azure-machine-learning-studio-b6f05595dd73

Practice
https://docs.microsoft.com/en-us/azure/machine-learning/studio/create-experiment
Azure for Students! Credits
https://azure.microsoft.com/th-th/free/students/

Slides:
- Microsoft AI:
https://github.com/mastertraining/boot-azure-ai/blob/master/slides/MsAi.pdf
- Machine learning algorithm cheat sheet:
https://docs.microsoft.com/en-us/azure/machine-learning/studio/algorithm-cheat-sheet

Demo: Cognitive Service
- https://azure.microsoft.com/en-us/services/cognitive-services/directory/vision/
- https://azure.microsoft.com/en-us/services/cognitive-services/computer-vision/
- https://azure.microsoft.com/en-us/services/cognitive-services/face/
-----------------------------
Microsoft Azure: Cognitive Service
//-----------------------------------------------------------------------------------------------------------------------------//
Prerequisites
1) .Net Core SDK:
https://dotnet.microsoft.com/download
2) Create a Cognitive Services account in the Azure portal:
https://docs.microsoft.com/en-us/azure/cognitive-services/cognitive-services-apis-create-account
//-----------------------------------------------------------------------------------------------------------------------------//
Example 1: Image Description
https://docs.microsoft.com/en-us/azure/cognitive-services/Computer-vision/quickstarts-sdk/csharp-analyze-sdk
Command:
- dotnet new console -n ai_imageDes //install .net SDK from website (Create .Net project)
- cd ai_imageDes
- dotnet add package Microsoft.Azure.CognitiveServices.Vision.ComputerVision
- dotnet restore
- dotnet run //run project

Edit Code:
1) Replace <Subscription Key> with your valid subscription key.
2) Change computerVision.Endpoint to the Azure region associated with your subscription keys, if necessary.
3) Replace <LocalImage> with the path and file name of a local image.
4) Optionally, set remoteImageUrl to a different image URL..
5) Run the program

Test Image:
http://static.asiawebdirect.com/m/phuket/portals/kosamui-com/homepage/chaweng-beach/pagePropertiesImage/chaweng.jpg.jpg
//-----------------------------------------------------------------------------------------------------------------------------//
Example 2: OCR
https://docs.microsoft.com/en-us/azure/cognitive-services/Computer-vision/quickstarts-sdk/csharp-hand-text-sdk
Command:
- dotnet new console -n ai_Ocr //install .net SDK from website (Create .Net project)
- cd ai_Ocr
- dotnet add package Microsoft.Azure.CognitiveServices.Vision.ComputerVision
- dotnet restore
- dotnet run //run project

Edit Code:
1) Replace <Subscription Key> with your valid subscription key.
2) Change computerVision.Endpoint to the Azure region associated with your subscription keys, if necessary.
3) Replace <LocalImage> with the path and file name of a local image.
4) Optionally, set remoteImageUrl to a different image.
5) Run the program.

Test Images:
1) http://www.atilal.com/mycourse/egci313/helloworld.png
2) http://www.atilal.com/mycourse/egci313/test1.jpg

Example 3: Image Classification
Document: https://docs.microsoft.com/en-us/azure/cognitive-services/Custom-Vision-Service/csharp-tutorial

(1) Download example code (Cognitive Services .NET Samples ): https://github.com/Azure-Samples/cognitive-services-dotnet-sdk-samples
(2) Login to "Custom Vision Website": https://customvision.ai/
(3) Create the project in Custom Vision
(4) Go to "Setting" and Copy the training key, production key, endpoint, and resource id to the C# project
(5) run C# project: dotnet run
(6) see the result
//-----------------------------------------------------------------------------------------------------------------------------//
Cognitive Services .NET Samples
https://github.com/Azure-Samples/cognitive-services-dotnet-sdk-samples
-------------------------------------------------
Github: Course Material
- Github Resource: https://try.github.io/
- Tutorial Point: https://www.tutorialspoint.com/git/
- Git Hello World: https://guides.github.com/activities/hello-world/
- Git Education Cheat Sheet: https://education.github.com/git-cheat-sheet-education.pdf
- Git Installation: https://git-scm.com/downloads

Docker: Course Material
- Docker Get Start: https://docs.docker.com/get-started/
- Docker for Beginner https://docker-curriculum.com/